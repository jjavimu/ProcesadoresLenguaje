package asint;

import java_cup.runtime.*;
import alex.AnalizadorLexicoTiny;
import alex.UnidadLexica;
import errors.GestionErroresTiny;

scan with {: return getScanner().next_token(); :};
parser code {: 
   private GestionErroresTiny errores;
   public void syntax_error(Symbol unidadLexica) {
     errores.errorSintactico((UnidadLexica)unidadLexica);
   }
:};
init with {: 
   errores = new GestionErroresTiny();
   AnalizadorLexicoTiny alex = (AnalizadorLexicoTiny)getScanner();
   alex.fijaGestionErrores(errores);
:};


terminal     IDEN, ENT, REAL, MAS,
             MENOS, POR, DIV, IGUAL, POTENCIA,MOD,
             PAP, PCIERRE, CAP, CCIERRE,
             MAYOR, MENOR, MAYORIGUAL, 
             MENORIGUAL, DISTINTO, 
             COMA, PUNTOYCOMA, DOSPUNTOS, IGUALDAD, AND, OR, NEG,
             LAP, LCIERRE, INT, VOID, CHAR, FLOAT, BOOL, ENUM,
             TRUE, FALSE, CARACTER, STRING, NEW, REF, WHILE, FOR,
             IF, ELSIF, ELSE, SWITCH, STRUCT, CASE, BREAK, DEFAULT,
             RETURN, MAIN, PRINT, PUNTO;


non terminal S;
non terminal Struct ;
non terminal DentroStruct;
non terminal Enumerado;
non terminal DentroEnumerado;
non terminal FuncionMain;
non terminal Funcion;
non terminal Args;
non terminal LlamadaFuncion;
non terminal Params;

non terminal Instrucciones;
non terminal BloqueInstrucciones;
non terminal Declaracion;
non terminal Asignacion;
non terminal If; 
// non terminal Elsif;
non terminal While;
non terminal Switch;
non terminal BloqueCase;
non terminal For;
non terminal InsLlamadaFuncion;

non terminal E0; 
non terminal E1;
non terminal E2;
non terminal E3;
non terminal E4;
non terminal E5;

non terminal Print;
non terminal Tipo;


S ::= Enumerado S 
      | Struct S 
      | Funcion S 
      | FuncionMain;

Enumerado ::= ENUM IDEN IGUAL LAP DentroEnumerado LCIERRE PUNTOYCOMA;
DentroEnumerado ::= IDEN COMA DentroEnumerado | IDEN;

Struct ::= STRUCT IDEN LAP DentroStruct LCIERRE PUNTOYCOMA;
DentroStruct ::= Declaracion DentroStruct | Declaracion;

Tipo ::= INT 
         | VOID 
         | FLOAT 
         | BOOL 
         | CHAR 
         | STRING;

Funcion ::= Tipo IDEN PAP Args PCIERRE BloqueInstrucciones;
FuncionMain ::= VOID MAIN PAP PCIERRE BloqueInstrucciones;
Args ::= Tipo IDEN COMA Args 
            | Tipo IDEN
            | ;

LlamadaFuncion ::= IDEN PAP Params PCIERRE;
Params ::= E0 COMA Params 
            | E0 
            | ;

BloqueInstrucciones ::= LAP Instrucciones LCIERRE;
Instrucciones ::= Declaracion Instrucciones 
                  | Asignacion Instrucciones    
                  | If Instrucciones
                  | While Instrucciones 
                  | Switch Instrucciones 
                  | For Instrucciones 
                  | Print Instrucciones 
                  | RETURN E0
                  | InsLlamadaFuncion
                  | ;

InsLlamadaFuncion ::= LlamadaFuncion PUNTOYCOMA;

Declaracion ::= Tipo IDEN PUNTOYCOMA | Tipo Asignacion;

Asignacion ::= IDEN IGUAL E0 PUNTOYCOMA;

If ::= IF PAP E0 PCIERRE BloqueInstrucciones
      | IF PAP E0 PCIERRE BloqueInstrucciones ELSE BloqueInstrucciones;
//      | IF PAP E0 PCIERRE BloqueInstrucciones Elsif;
//Elsif ::= ELSIF PAP E0 PCIERRE BloqueInstrucciones Elsif
//         | ELSE BloqueInstrucciones
//         | ;

While ::= WHILE PAP E0 PCIERRE BloqueInstrucciones;



Switch ::= SWITCH PAP IDEN PCIERRE LAP BloqueCase LCIERRE;
BloqueCase ::= CASE E0 DOSPUNTOS Instrucciones BREAK PUNTOYCOMA BloqueCase 
               | DEFAULT DOSPUNTOS Instrucciones;

Print ::= PRINT PAP E0 PCIERRE PUNTOYCOMA;

Return ::= RETURN E0 | RETURN;


// Expresiones y operadores
E0 ::= E0 POTENCIA E1 
      | E1;
E1 ::= NEG E1
      | E1 POR E2 
      | E1 DIV E2 
      | E2;
E2 ::= E2 MAYOR E3 
      | E2 MENOR E3 
      | E2 MAYORIGUAL E3 
      | E2 MENORIGUAL E3 
      | E2 IGUALDAD E3
      | E2 DISTINTO E3
      | E2 MAS E3
      | E2 MENOS E3
      | E2 MOD E3
      | E3;
E4 ::= E4 AND E5
      | E4 OR E5
      | E5;
E5 ::= TRUE
      | FALSE
      | ENT
      | REAL
      | CARACTER
      | IDEN
      | LlamadaFuncion
      | PAP E0 PCIERRE;







