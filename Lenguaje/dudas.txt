VIERNES
- llaves del acceso 

VIERNES 23 ABRIL PREGUNTAR:
- linea y columna
- string: concatenaciones, mutable, longitud etc? 

// Inicializar structs?
int[4] array(0);
int[4] array = {1,2,3,4}
funcion longitud del array

duda: return no se cuando cogemos el valor de retorno?


FALTA
errores
tiposCheck




mirar:
- operadorPotencia lexico
- enumerados asociarle numeros

- read
- constantes/typedef
- clases
- For/elsif

- añadir la columna



DOCUMENTO:
Comentarios a la entrega:

- Indicad si se puede inicializar en la declaración. si

- En las funciones: los parámetros se pasan por valor o por referencia? 
Hay restricciones en los tipos de los parámetros y/o resultados? 
Puede haber varios return?

- solo se pueden definir nuevos tipos enumerado?

- En comprobación de tipos decid por ejemplo como se comparan enumerados. Valen como enteros? Si se incluyen otras definiciones de tipos entonces si se compara su estructura o si se comparan por nombre.

- Las funciones se pueden llamar en cualquier sitio (si el tipo coincide)? Debe ser posible llamarlas dentro de expresiones.

- La operación read siempre tiene que estar asociada a una declaración?

- En el texto la descripción del read está inacabada.

- Tabla operadores actualizar (* acceso a memoria, & acceso a memoria, menos unario)
- Tipo puntero *
- Arrays ahora se declaran con <>




CODIGO RARO
Acceso ::= IDEN:nombre
            {: RESULT = new AccesoVar(nombre.lexema); :}
            | Acceso:ref PUNTO IDEN:campo 
            {: RESULT = new AccesoStruct(ref,campo.lexema); :}
            | Acceso:ref CAP E0:exp CCIERRE 
            {: RESULT = new AccesoArray(ref,exp); :}
            | POR Acceso:ref
            {: RESULT = new AccesoPuntero(ref); :};
//Acceso ::= IDEN:nombre ListaAccesos:lista 
 //           {: RESULT = new AccesoVar(nombre.lexema,lista)); :}
  //          | POR Acceso:ref 
    //        {: RESULT = new AccesoPuntero(ref); :};

//ListaAccesos ::= ListaAccesos:lista CAP E0:indice CCIERRE 
//            {: RESULT = lista ; lista.add(new AccesoArray(indice)); :}
//            | ListaAccesos:lista PUNTO IDEN:campo
//            {: RESULT = lista ; lista.add(new AccesoStruct(campo.lexema)); :}
//            |                                   
//            {: RESULT = new ArrayList<Acceso>(); :};
